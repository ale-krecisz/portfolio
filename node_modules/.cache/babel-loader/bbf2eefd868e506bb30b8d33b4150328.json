{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/michalkrecisz/Documents/projects/portfolio/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nfunction _templateObject2() {\n  const data = _taggedTemplateLiteral([\"\\n  $steps: 20;\\n  @for $i from 0 through $steps {\\n    #{percentage($i*(1/$steps))} {\\n      clip: rect(random(100)+px, 9999px, random(100)+px, 0);\\n\\t\\t\\ttransform: skew((random(100) / 100) + deg);\\n    }\\n  }\\n\"]);\n\n  _templateObject2 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n    @mixin glitchCopy { \\n\\t\\tcontent: attr(data-text);\\n\\t\\tposition: absolute;\\n\\t\\ttop: 0;\\n\\t\\tleft: 0;\\n\\t\\twidth: 100%;\\n\\t\\theight: 100%;\\n    }\\n\\n\\tposition: relative;\\n\\tcolor: white;\\n\\tfont-size: 4em;\\n\\tletter-spacing: .5em;\\n\\tanimation: \", \" 1s infinite linear alternate-reverse;\\n\\t\\n\\t// Creates a copy before our text. \\n\\t&::before{\\n\\t\\t@include glitchCopy;\\n\\t\\tleft: 2px;\\n\\t\\ttext-shadow: -2px 0 #ff00c1;\\n\\t\\tclip: rect(44px, 450px, 56px, 0);\\n\\t\\tanimation: \", \" 5s infinite linear alternate-reverse;\\n\\t}\\n\\t\\n\\t&::after {\\n\\t\\t@include glitchCopy;\\n\\t\\tleft: -2px;\\n\\t\\ttext-shadow: -2px 0 #00fff9, 2px 2px #ff00c1;\\n\\t\\tanimation: \", \" 1s infinite linear alternate-reverse;\\n\\t}\\n}\\n\\n\\n\\n// Same deal, just duplicated for ultra randomness.\\n@keyframes glitch-anim2 {\\n  $steps: 20;\\n  @for $i from 0 through $steps {\\n    #{percentage($i*(1/$steps))} {\\n      clip: rect(random(100)+px, 9999px, random(100)+px, 0);\\n\\t\\t\\ttransform: skew((random(100) / 100) + deg);\\n    }\\n  }\\n}\\n\\n// Does the same deal as before, but now only skews. Used for main text.\\n@keyframes glitch-skew {\\n  $steps: 10;\\n  @for $i from 0 through $steps {\\n    #{percentage($i*(1/$steps))} {\\n      transform: skew((random(10) - 5) + deg);\\n    }\\n  }\\n}\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport styled, { keyframes } from 'styled-components';\nimport { NavLink } from \"react-router-dom\";\nimport variables from '../../constants/styleVariables';\nexport const Nav = styled.h1(_templateObject(), glitch - skew, glitchAnim, glitchAnim2);\nconst glitchAnim = keyframes(_templateObject2());","map":{"version":3,"sources":["/Users/michalkrecisz/Documents/projects/portfolio/src/components/GlitchText/styled.js"],"names":["styled","keyframes","NavLink","variables","Nav","h1","glitch","skew","glitchAnim","glitchAnim2"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,MAAP,IAAgBC,SAAhB,QAAgC,mBAAhC;AACA,SAASC,OAAT,QAAwB,kBAAxB;AACA,OAAOC,SAAP,MAAsB,gCAAtB;AAEA,OAAO,MAAMC,GAAG,GAAGJ,MAAM,CAACK,EAAV,oBAcFC,MAAM,GAACC,IAdL,EAsBDC,UAtBC,EA6BDC,WA7BC,CAAT;AAyDP,MAAMD,UAAU,GAAGP,SAAH,oBAAhB","sourcesContent":["import styled, {keyframes} from 'styled-components'\nimport { NavLink } from \"react-router-dom\";\nimport variables from '../../constants/styleVariables'\n\nexport const Nav = styled.h1`\n    @mixin glitchCopy { \n\t\tcontent: attr(data-text);\n\t\tposition: absolute;\n\t\ttop: 0;\n\t\tleft: 0;\n\t\twidth: 100%;\n\t\theight: 100%;\n    }\n\n\tposition: relative;\n\tcolor: white;\n\tfont-size: 4em;\n\tletter-spacing: .5em;\n\tanimation: ${glitch-skew} 1s infinite linear alternate-reverse;\n\t\n\t// Creates a copy before our text. \n\t&::before{\n\t\t@include glitchCopy;\n\t\tleft: 2px;\n\t\ttext-shadow: -2px 0 #ff00c1;\n\t\tclip: rect(44px, 450px, 56px, 0);\n\t\tanimation: ${glitchAnim} 5s infinite linear alternate-reverse;\n\t}\n\t\n\t&::after {\n\t\t@include glitchCopy;\n\t\tleft: -2px;\n\t\ttext-shadow: -2px 0 #00fff9, 2px 2px #ff00c1;\n\t\tanimation: ${glitchAnim2} 1s infinite linear alternate-reverse;\n\t}\n}\n\n\n\n// Same deal, just duplicated for ultra randomness.\n@keyframes glitch-anim2 {\n  $steps: 20;\n  @for $i from 0 through $steps {\n    #{percentage($i*(1/$steps))} {\n      clip: rect(random(100)+px, 9999px, random(100)+px, 0);\n\t\t\ttransform: skew((random(100) / 100) + deg);\n    }\n  }\n}\n\n// Does the same deal as before, but now only skews. Used for main text.\n@keyframes glitch-skew {\n  $steps: 10;\n  @for $i from 0 through $steps {\n    #{percentage($i*(1/$steps))} {\n      transform: skew((random(10) - 5) + deg);\n    }\n  }\n}\n`;\n\nconst glitchAnim = keyframes`\n  $steps: 20;\n  @for $i from 0 through $steps {\n    #{percentage($i*(1/$steps))} {\n      clip: rect(random(100)+px, 9999px, random(100)+px, 0);\n\t\t\ttransform: skew((random(100) / 100) + deg);\n    }\n  }\n`"]},"metadata":{},"sourceType":"module"}