{"ast":null,"code":"var _jsxFileName = \"/Users/michalkrecisz/Documents/projects/portfolio/src/components/Bunny.js\";\nimport React, { useRef } from 'react';\nimport * as PIXI from \"pixi.js\";\nconst image = \"https://s3-us-west-2.amazonaws.com/s.cdpn.io/693612/IaUrttj.png\";\n\nconst Bunny = () => {\n  const myCanvas = useRef(null); // VARS STORAGE //\n\n  var rt = [],\n      rts = [],\n      bgs = [],\n      containers = [],\n      channelsContainer = [],\n      displacementFilters = [],\n      brushes = [];\n  var bg; // CHANNEL FILTERS //\n\n  var redChannelFilter = new PIXI.filters.ColorMatrixFilter();\n  redChannelFilter.matrix = [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0];\n  var greenChannelFilter = new PIXI.filters.ColorMatrixFilter();\n  greenChannelFilter.matrix = [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0];\n  var blueChannelFilter = new PIXI.filters.ColorMatrixFilter();\n  blueChannelFilter.matrix = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0];\n  channelsContainer.push(redChannelFilter, greenChannelFilter, blueChannelFilter); // APP //\n\n  var app = new PIXI.Application(500, 480, {\n    autoStart: false,\n    backgroundColor: 0x000000,\n    view: myCanvas\n  }); // CAPTURING CASHE //\n\n  for (var i = 0; i < 3; i++) {\n    rt.push(PIXI.RenderTexture.create(app.screen.width, app.screen.height));\n    rts.push(rt);\n  }\n\n  var current = 0; // CONTAINERS //\n\n  var containerRed = new PIXI.Container();\n  containerRed.position.x = 0;\n  var containerGreen = new PIXI.Container();\n  containerGreen.position.x = 0;\n  var containerBlue = new PIXI.Container();\n  containerBlue.position.x = 0;\n  containers.push(containerRed, containerGreen, containerBlue); // LOAD TEXTURES //\n\n  app.loader.add('bg', 'https://raw.githubusercontent.com/PavelLaptev/test-rep/master/grunge.jpg');\n  app.loader.add('one', 'https://raw.githubusercontent.com/PavelLaptev/test-rep/master/dis-varOne.png'); // LOADER //\n\n  app.loader.load(function (loader, resources) {\n    var tempBg = new PIXI.Sprite(resources.bg.texture);\n    tempBg.width = app.screen.width;\n    tempBg.height = app.screen.height;\n    app.renderer.render(tempBg, rt[0]);\n\n    for (var i = 0, len = containers.length; i < len; i++) {\n      app.stage.addChild(containers[i]);\n      brushes.push(new PIXI.Sprite(resources.one.texture));\n      displacementFilters.push(new PIXI.filters.DisplacementFilter(brushes[i]));\n      bg = new PIXI.Sprite(rts[0][0]);\n      bgs.push(bg);\n      containers[i].filters = [channelsContainer[i], displacementFilters[i]];\n      containers[i].addChild(bgs[i], brushes[i]);\n    }\n\n    brushes[0].anchor.set(0.5);\n    brushes[1].anchor.set(0.6);\n    brushes[2].anchor.set(0.4);\n    containers[1].filters[1].blendMode = PIXI.BLEND_MODES.ADD;\n    containers[2].filters[1].blendMode = PIXI.BLEND_MODES.ADD;\n    app.stage.interactive = true;\n    app.stage.on('pointermove', onPointerMove);\n    app.start();\n  });\n\n  function onPointerMove(event) {\n    const x = event.data.global.x;\n    const y = event.data.global.y;\n\n    for (var i = 0, len = containers.length; i < len; i++) {\n      displacementFilters[i].scale.x = Math.atan(x - brushes[i].x) * 50;\n      displacementFilters[i].scale.y = Math.atan(y - brushes[i].y) * 50;\n      brushes[i].position.copy(event.data.global);\n    }\n  }\n\n  render(React.createElement(\"canvas\", {\n    id: \"myCanvas\",\n    ref: myCanvas,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }));\n};\n\nexport default Bunny;","map":{"version":3,"sources":["/Users/michalkrecisz/Documents/projects/portfolio/src/components/Bunny.js"],"names":["React","useRef","PIXI","image","Bunny","myCanvas","rt","rts","bgs","containers","channelsContainer","displacementFilters","brushes","bg","redChannelFilter","filters","ColorMatrixFilter","matrix","greenChannelFilter","blueChannelFilter","push","app","Application","autoStart","backgroundColor","view","i","RenderTexture","create","screen","width","height","current","containerRed","Container","position","x","containerGreen","containerBlue","loader","add","load","resources","tempBg","Sprite","texture","renderer","render","len","length","stage","addChild","one","DisplacementFilter","anchor","set","blendMode","BLEND_MODES","ADD","interactive","on","onPointerMove","start","event","data","global","y","scale","Math","atan","copy"],"mappings":"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","sourcesContent":["import React, {useRef} from 'react'\nimport * as PIXI from \"pixi.js\";\n\nconst image = \"https://s3-us-west-2.amazonaws.com/s.cdpn.io/693612/IaUrttj.png\";\n\nconst Bunny = () => {\n\n    const myCanvas = useRef(null);\n\n\n// VARS STORAGE //\nvar rt = [], rts = [], bgs = [], containers = [], channelsContainer = [], displacementFilters = [], brushes = [];\nvar bg;\n\n// CHANNEL FILTERS //\nvar redChannelFilter = new PIXI.filters.ColorMatrixFilter();\nredChannelFilter.matrix = [\n  1, 0, 0, 0, 0, \n  0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, \n  0, 0, 0, 1, 0\n];\n\nvar greenChannelFilter = new PIXI.filters.ColorMatrixFilter();\ngreenChannelFilter.matrix = [\n  0, 0, 0, 0, 0, \n  0, 1, 0, 0, 0, \n  0, 0, 0, 0, 0, \n  0, 0, 0, 1, 0\n];\n\nvar blueChannelFilter = new PIXI.filters.ColorMatrixFilter();\nblueChannelFilter.matrix = [\n  0, 0, 0, 0, 0, \n  0, 0, 0, 0, 0, \n  0, 0, 1, 0, 0, \n  0, 0, 0, 1, 0\n];\n\nchannelsContainer.push(redChannelFilter,greenChannelFilter,blueChannelFilter);\n\n// APP //\nvar app = new PIXI.Application(500, 480, {\n  autoStart: false, \n  backgroundColor: 0x000000, \n  view: myCanvas\n});\n\n// CAPTURING CASHE //\nfor (var i=0;i<3;i++) {\n  rt.push(PIXI.RenderTexture.create(app.screen.width, app.screen.height));\n  rts.push(rt);\n}\nvar current = 0;\n\n// CONTAINERS //\nvar containerRed = new PIXI.Container();\n    containerRed.position.x = 0;\nvar containerGreen = new PIXI.Container();\n    containerGreen.position.x = 0;\nvar containerBlue = new PIXI.Container();\n    containerBlue.position.x = 0;\ncontainers.push(containerRed, containerGreen, containerBlue);\n\n// LOAD TEXTURES //\napp.loader.add('bg', 'https://raw.githubusercontent.com/PavelLaptev/test-rep/master/grunge.jpg');\napp.loader.add('one', 'https://raw.githubusercontent.com/PavelLaptev/test-rep/master/dis-varOne.png');\n\n// LOADER //\napp.loader.load(function(loader, resources) {\n  var tempBg = new PIXI.Sprite(resources.bg.texture);\n      tempBg.width = app.screen.width;\n      tempBg.height = app.screen.height;\n\n  app.renderer.render(tempBg, rt[0]);\n  \n  for (var i=0, len=containers.length; i<len; i++) {\n    app.stage.addChild(containers[i]);\n    brushes.push(new PIXI.Sprite(resources.one.texture));\n    displacementFilters.push(new PIXI.filters.DisplacementFilter(brushes[i]));\n    \n    bg = new PIXI.Sprite(rts[0][0]);\n    bgs.push(bg);\n    containers[i].filters = [channelsContainer[i],displacementFilters[i]];\n    containers[i].addChild(bgs[i],brushes[i]); \n  }\n \n  brushes[0].anchor.set(0.5); brushes[1].anchor.set(0.6); brushes[2].anchor.set(0.4); \n  containers[1].filters[1].blendMode = PIXI.BLEND_MODES.ADD;\n  containers[2].filters[1].blendMode = PIXI.BLEND_MODES.ADD;\n\n  app.stage.interactive = true;\n  app.stage.on('pointermove', onPointerMove);\n  app.start();\n});\n\n \nfunction onPointerMove(event) {\n  const x = event.data.global.x;\n  const y = event.data.global.y;\n  \n  for (var i=0, len=containers.length; i<len; i++) {\n    displacementFilters[i].scale.x = Math.atan(x - brushes[i].x)*50; \n    displacementFilters[i].scale.y = Math.atan(y - brushes[i].y)*50;\n\n    brushes[i].position.copy(event.data.global);\n  }\n}\n\n    render(\n        <canvas id='myCanvas' ref={myCanvas}/>\n    )\n};\n\nexport default Bunny;"]},"metadata":{},"sourceType":"module"}