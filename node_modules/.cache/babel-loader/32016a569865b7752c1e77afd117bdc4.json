{"ast":null,"code":"import _slicedToArray from \"/Users/michalkrecisz/Documents/projects/portfolio/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/michalkrecisz/Documents/projects/portfolio/src/components/Bunny.js\";\nimport React, { useState } from 'react';\nimport { Graphics } from 'pixi.js';\nimport { Stage, Sprite, Container, useTick } from '@inlet/react-pixi';\nimport Pic from '../assets/grunge.jpg';\n\nconst Bunny = () => {\n  const _useState = useState(0),\n        _useState2 = _slicedToArray(_useState, 2),\n        x = _useState2[0],\n        setX = _useState2[1];\n\n  const _useState3 = useState(0),\n        _useState4 = _slicedToArray(_useState3, 2),\n        y = _useState4[0],\n        setY = _useState4[1];\n\n  const _useState5 = useState(0),\n        _useState6 = _slicedToArray(_useState5, 2),\n        rotation = _useState6[0],\n        setRotation = _useState6[1]; // increment\n\n\n  let i = 0; // custom ticker\n\n  useTick(delta => {\n    i += 0.05 * delta;\n    setX(Math.sin(i) * 100);\n    setY(Math.sin(i / 1.5) * 100);\n    setRotation(-10 + Math.sin(i / 10 + Math.PI * 2) * 10);\n  });\n  return React.createElement(Sprite, {\n    image: Pic,\n    anchor: 0.5,\n    x: x,\n    y: y,\n    rotation: rotation,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  });\n};\n\nexport default Bunny;","map":{"version":3,"sources":["/Users/michalkrecisz/Documents/projects/portfolio/src/components/Bunny.js"],"names":["React","useState","Graphics","Stage","Sprite","Container","useTick","Pic","Bunny","x","setX","y","setY","rotation","setRotation","i","delta","Math","sin","PI"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAASC,QAAT,QAAyB,SAAzB;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,SAAxB,EAAmCC,OAAnC,QAAmD,mBAAnD;AAEA,OAAOC,GAAP,MAAgB,sBAAhB;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAAA,oBACEP,QAAQ,CAAC,CAAD,CADV;AAAA;AAAA,QACTQ,CADS;AAAA,QACNC,IADM;;AAAA,qBAEET,QAAQ,CAAC,CAAD,CAFV;AAAA;AAAA,QAETU,CAFS;AAAA,QAENC,IAFM;;AAAA,qBAGgBX,QAAQ,CAAC,CAAD,CAHxB;AAAA;AAAA,QAGTY,QAHS;AAAA,QAGCC,WAHD,kBAKhB;;;AACA,MAAIC,CAAC,GAAG,CAAR,CANgB,CAQhB;;AACAT,EAAAA,OAAO,CAACU,KAAK,IAAI;AACfD,IAAAA,CAAC,IAAI,OAAOC,KAAZ;AAEAN,IAAAA,IAAI,CAACO,IAAI,CAACC,GAAL,CAASH,CAAT,IAAc,GAAf,CAAJ;AACAH,IAAAA,IAAI,CAACK,IAAI,CAACC,GAAL,CAASH,CAAC,GAAC,GAAX,IAAkB,GAAnB,CAAJ;AACAD,IAAAA,WAAW,CAAC,CAAC,EAAD,GAAMG,IAAI,CAACC,GAAL,CAASH,CAAC,GAAC,EAAF,GAAOE,IAAI,CAACE,EAAL,GAAU,CAA1B,IAA+B,EAAtC,CAAX;AACD,GANM,CAAP;AAQA,SACE,oBAAC,MAAD;AACE,IAAA,KAAK,EAAEZ,GADT;AAEE,IAAA,MAAM,EAAE,GAFV;AAGE,IAAA,CAAC,EAAEE,CAHL;AAIE,IAAA,CAAC,EAAEE,CAJL;AAKE,IAAA,QAAQ,EAAEE,QALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AASH,CA1BD;;AA4BA,eAAeL,KAAf","sourcesContent":["import React, {useState} from 'react';\nimport { Graphics } from 'pixi.js';\nimport { Stage, Sprite, Container, useTick  } from '@inlet/react-pixi';\n\nimport Pic from '../assets/grunge.jpg'\n\nconst Bunny = () => {\n    const [x, setX] = useState(0);\n    const [y, setY] = useState(0);\n    const [rotation, setRotation] = useState(0);\n    \n    // increment\n    let i = 0;\n  \n    // custom ticker\n    useTick(delta => {\n      i += 0.05 * delta;\n  \n      setX(Math.sin(i) * 100);\n      setY(Math.sin(i/1.5) * 100);\n      setRotation(-10 + Math.sin(i/10 + Math.PI * 2) * 10);\n    });\n  \n    return (\n      <Sprite\n        image={Pic}\n        anchor={0.5}\n        x={x}\n        y={y}\n        rotation={rotation}\n      />\n    );\n};\n\nexport default Bunny;"]},"metadata":{},"sourceType":"module"}