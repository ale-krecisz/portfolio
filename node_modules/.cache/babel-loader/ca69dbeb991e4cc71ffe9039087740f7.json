{"ast":null,"code":"var _jsxFileName = \"/Users/michalkrecisz/Documents/projects/portfolio/src/components/Bunny.js\";\nimport React, { useRef, useEffect } from 'react';\nimport * as PIXI from 'pixi.js';\n\nconst Bunny = () => {\n  const myCanvas = useRef(null);\n  useEffect(() => {\n    setStage();\n  });\n\n  const setStage = () => {\n    var rt = [],\n        rts = [],\n        bgs = [],\n        containers = [],\n        channelsContainer = [],\n        displacementFilters = [],\n        brushes = [];\n    var bg; // CHANNEL FILTERS //\n\n    var redChannelFilter = new PIXI.filters.ColorMatrixFilter();\n    redChannelFilter.matrix = [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0];\n    var greenChannelFilter = new PIXI.filters.ColorMatrixFilter();\n    greenChannelFilter.matrix = [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0];\n    var blueChannelFilter = new PIXI.filters.ColorMatrixFilter();\n    blueChannelFilter.matrix = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0];\n    channelsContainer.push(redChannelFilter, greenChannelFilter, blueChannelFilter); // APP //\n\n    var app = new PIXI.Application(500, 480, {\n      autoStart: false,\n      backgroundColor: 0x000000,\n      view: myCanvas\n    }); // CAPTURING CASHE //\n\n    for (var i = 0; i < 3; i++) {\n      rt.push(PIXI.RenderTexture.create(app.screen.width, app.screen.height));\n      rts.push(rt);\n    }\n\n    var current = 0; // CONTAINERS //\n\n    var containerRed = new PIXI.Container();\n    containerRed.position.x = 0;\n    var containerGreen = new PIXI.Container();\n    containerGreen.position.x = 0;\n    var containerBlue = new PIXI.Container();\n    containerBlue.position.x = 0;\n    containers.push(containerRed, containerGreen, containerBlue); // LOAD TEXTURES //\n\n    app.loader.add('bg', 'https://raw.githubusercontent.com/PavelLaptev/test-rep/master/grunge.jpg');\n    app.loader.add('one', 'https://raw.githubusercontent.com/PavelLaptev/test-rep/master/dis-varOne.png'); // // LOADER //\n\n    app.loader.load(function (loader, resources) {\n      var tempBg = new PIXI.Sprite(resources.bg.texture);\n      tempBg.width = app.screen.width;\n      tempBg.height = app.screen.height;\n      app.renderer.render(tempBg, rt[0]);\n\n      for (var i = 0, len = containers.length; i < len; i++) {\n        app.stage.addChild(containers[i]);\n        brushes.push(new PIXI.Sprite(resources.one.texture));\n        displacementFilters.push(new PIXI.filters.DisplacementFilter(brushes[i]));\n        bg = new PIXI.Sprite(rts[0][0]);\n        bgs.push(bg);\n        containers[i].filters = [channelsContainer[i], displacementFilters[i]];\n        containers[i].addChild(bgs[i], brushes[i]);\n      }\n\n      brushes[0].anchor.set(0.5);\n      brushes[1].anchor.set(0.6);\n      brushes[2].anchor.set(0.4);\n      containers[1].filters[1].blendMode = PIXI.BLEND_MODES.ADD;\n      containers[2].filters[1].blendMode = PIXI.BLEND_MODES.ADD;\n      app.stage.interactive = true;\n      app.stage.on('pointermove', onPointerMove);\n      app.start();\n    });\n\n    function onPointerMove(event) {\n      const x = event.data.global.x;\n      const y = event.data.global.y;\n\n      for (var i = 0, len = containers.length; i < len; i++) {\n        displacementFilters[i].scale.x = Math.atan(x - brushes[i].x) * 50;\n        displacementFilters[i].scale.y = Math.atan(y - brushes[i].y) * 50;\n        brushes[i].position.copy(event.data.global);\n      }\n    }\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, React.createElement(\"canvas\", {\n    id: \"myCanvas\",\n    ref: \"myCanvas\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }));\n};\n\nexport default Bunny;","map":{"version":3,"sources":["/Users/michalkrecisz/Documents/projects/portfolio/src/components/Bunny.js"],"names":["React","useRef","useEffect","PIXI","Bunny","myCanvas","setStage","rt","rts","bgs","containers","channelsContainer","displacementFilters","brushes","bg","redChannelFilter","filters","ColorMatrixFilter","matrix","greenChannelFilter","blueChannelFilter","push","app","Application","autoStart","backgroundColor","view","i","RenderTexture","create","screen","width","height","current","containerRed","Container","position","x","containerGreen","containerBlue","loader","add","load","resources","tempBg","Sprite","texture","renderer","render","len","length","stage","addChild","one","DisplacementFilter","anchor","set","blendMode","BLEND_MODES","ADD","interactive","on","onPointerMove","start","event","data","global","y","scale","Math","atan","copy"],"mappings":"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","sourcesContent":["import React, {useRef, useEffect} from 'react';\nimport * as PIXI from 'pixi.js';\n\n\nconst Bunny = () => {\n    const myCanvas = useRef(null);\n\n    useEffect(() => {\n        setStage()\n    }); \n\n    const setStage = () => {\n        var rt = [], rts = [], bgs = [], containers = [], channelsContainer = [], displacementFilters = [], brushes = [];\n        var bg;\n    \n        // CHANNEL FILTERS //\n        var redChannelFilter = new PIXI.filters.ColorMatrixFilter();\n        redChannelFilter.matrix = [\n        1, 0, 0, 0, 0, \n        0, 0, 0, 0, 0,\n        0, 0, 0, 0, 0, \n        0, 0, 0, 1, 0\n        ];\n    \n        var greenChannelFilter = new PIXI.filters.ColorMatrixFilter();\n        greenChannelFilter.matrix = [\n        0, 0, 0, 0, 0, \n        0, 1, 0, 0, 0, \n        0, 0, 0, 0, 0, \n        0, 0, 0, 1, 0\n        ];\n    \n        var blueChannelFilter = new PIXI.filters.ColorMatrixFilter();\n        blueChannelFilter.matrix = [\n        0, 0, 0, 0, 0, \n        0, 0, 0, 0, 0, \n        0, 0, 1, 0, 0, \n        0, 0, 0, 1, 0\n        ];\n    \n        channelsContainer.push(redChannelFilter,greenChannelFilter,blueChannelFilter);\n    \n        // APP //\n        var app = new PIXI.Application(500, 480, {\n            autoStart: false, \n            backgroundColor: 0x000000, \n            view: myCanvas\n        });\n    \n        // CAPTURING CASHE //\n        for (var i=0;i<3;i++) {\n            rt.push(PIXI.RenderTexture.create(app.screen.width, app.screen.height));\n            rts.push(rt);\n        }\n        var current = 0;\n    \n        // CONTAINERS //\n        var containerRed = new PIXI.Container();\n            containerRed.position.x = 0;\n        var containerGreen = new PIXI.Container();\n            containerGreen.position.x = 0;\n        var containerBlue = new PIXI.Container();\n            containerBlue.position.x = 0;\n        containers.push(containerRed, containerGreen, containerBlue);\n    \n        // LOAD TEXTURES //\n        app.loader.add('bg', 'https://raw.githubusercontent.com/PavelLaptev/test-rep/master/grunge.jpg');\n        app.loader.add('one', 'https://raw.githubusercontent.com/PavelLaptev/test-rep/master/dis-varOne.png');\n    \n        // // LOADER //\n        app.loader.load(function(loader, resources) {\n        var tempBg = new PIXI.Sprite(resources.bg.texture);\n            tempBg.width = app.screen.width;\n            tempBg.height = app.screen.height;\n    \n        app.renderer.render(tempBg, rt[0]);\n        \n        for (var i=0, len=containers.length; i<len; i++) {\n            app.stage.addChild(containers[i]);\n            brushes.push(new PIXI.Sprite(resources.one.texture));\n            displacementFilters.push(new PIXI.filters.DisplacementFilter(brushes[i]));\n            \n            bg = new PIXI.Sprite(rts[0][0]);\n            bgs.push(bg);\n            containers[i].filters = [channelsContainer[i],displacementFilters[i]];\n            containers[i].addChild(bgs[i],brushes[i]); \n        }\n        \n        brushes[0].anchor.set(0.5); brushes[1].anchor.set(0.6); brushes[2].anchor.set(0.4); \n        containers[1].filters[1].blendMode = PIXI.BLEND_MODES.ADD;\n        containers[2].filters[1].blendMode = PIXI.BLEND_MODES.ADD;\n    \n        app.stage.interactive = true;\n        app.stage.on('pointermove', onPointerMove);\n        app.start();\n        });\n    \n        \n        function onPointerMove(event) {\n            const x = event.data.global.x;\n            const y = event.data.global.y;\n            \n            for (var i=0, len=containers.length; i<len; i++) {\n                displacementFilters[i].scale.x = Math.atan(x - brushes[i].x)*50; \n                displacementFilters[i].scale.y = Math.atan(y - brushes[i].y)*50;\n    \n                brushes[i].position.copy(event.data.global);\n            }\n        }\n    \n    }\n\n   \n    return (\n        <div>\n            <canvas id='myCanvas' ref='myCanvas' />\n        </div>\n    )\n}\n\nexport default Bunny;"]},"metadata":{},"sourceType":"module"}