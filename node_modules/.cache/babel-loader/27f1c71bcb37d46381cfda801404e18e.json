{"ast":null,"code":"import _slicedToArray from \"/Users/michalkrecisz/Documents/projects/portfolio/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/michalkrecisz/Documents/projects/portfolio/src/components/Bunny.js\";\nconst _ReactDOM = ReactDOM,\n      render = _ReactDOM.render;\nconst _ReactPixi = ReactPixi,\n      Stage = _ReactPixi.Stage,\n      Sprite = _ReactPixi.Sprite,\n      Container = _ReactPixi.Container,\n      useTick = _ReactPixi.useTick;\nconst _React = React,\n      useState = _React.useState;\n\nconst Bunny = () => {\n  const Item = () => {\n    // states\n    const _useState = useState(0),\n          _useState2 = _slicedToArray(_useState, 2),\n          x = _useState2[0],\n          setX = _useState2[1];\n\n    const _useState3 = useState(0),\n          _useState4 = _slicedToArray(_useState3, 2),\n          y = _useState4[0],\n          setY = _useState4[1];\n\n    const _useState5 = useState(0),\n          _useState6 = _slicedToArray(_useState5, 2),\n          rotation = _useState6[0],\n          setRotation = _useState6[1]; // increment\n\n\n    let i = 0; // custom ticker\n\n    useTick(delta => {\n      i += 0.05 * delta;\n      setX(Math.sin(i) * 100);\n      setY(Math.sin(i / 1.5) * 100);\n      setRotation(-10 + Math.sin(i / 10 + Math.PI * 2) * 10);\n    });\n    return React.createElement(Sprite, {\n      image: \"https://s3-us-west-2.amazonaws.com/s.cdpn.io/693612/IaUrttj.png\",\n      anchor: 0.5,\n      x: x,\n      y: y,\n      rotation: rotation,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    });\n  };\n\n  render(React.createElement(Stage, {\n    width: 300,\n    height: 300,\n    options: {\n      backgroundColor: 0x01262a\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(Container, {\n    x: 150,\n    y: 150,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(Item, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }))));\n};\n\nexport default Bunny;","map":{"version":3,"sources":["/Users/michalkrecisz/Documents/projects/portfolio/src/components/Bunny.js"],"names":["ReactDOM","render","ReactPixi","Stage","Sprite","Container","useTick","React","useState","Bunny","Item","x","setX","y","setY","rotation","setRotation","i","delta","Math","sin","PI","backgroundColor"],"mappings":";;kBAAmBA,Q;MAAXC,M,aAAAA,M;mBACsCC,S;MAAtCC,K,cAAAA,K;MAAOC,M,cAAAA,M;MAAQC,S,cAAAA,S;MAAWC,O,cAAAA,O;eACbC,K;MAAbC,Q,UAAAA,Q;;AAER,MAAMC,KAAK,GAAG,MAAM;AAChB,QAAMC,IAAI,GAAG,MAAM;AACrB;AADqB,sBAEHF,QAAQ,CAAC,CAAD,CAFL;AAAA;AAAA,UAEdG,CAFc;AAAA,UAEXC,IAFW;;AAAA,uBAGHJ,QAAQ,CAAC,CAAD,CAHL;AAAA;AAAA,UAGdK,CAHc;AAAA,UAGXC,IAHW;;AAAA,uBAIWN,QAAQ,CAAC,CAAD,CAJnB;AAAA;AAAA,UAIdO,QAJc;AAAA,UAIJC,WAJI,kBAMrB;;;AACA,QAAIC,CAAC,GAAG,CAAR,CAPqB,CASrB;;AACAX,IAAAA,OAAO,CAACY,KAAK,IAAI;AACfD,MAAAA,CAAC,IAAI,OAAOC,KAAZ;AAEAN,MAAAA,IAAI,CAACO,IAAI,CAACC,GAAL,CAASH,CAAT,IAAc,GAAf,CAAJ;AACAH,MAAAA,IAAI,CAACK,IAAI,CAACC,GAAL,CAASH,CAAC,GAAC,GAAX,IAAkB,GAAnB,CAAJ;AACAD,MAAAA,WAAW,CAAC,CAAC,EAAD,GAAMG,IAAI,CAACC,GAAL,CAASH,CAAC,GAAC,EAAF,GAAOE,IAAI,CAACE,EAAL,GAAU,CAA1B,IAA+B,EAAtC,CAAX;AACD,KANM,CAAP;AAQA,WACE,oBAAC,MAAD;AACE,MAAA,KAAK,EAAC,iEADR;AAEE,MAAA,MAAM,EAAE,GAFV;AAGE,MAAA,CAAC,EAAEV,CAHL;AAIE,MAAA,CAAC,EAAEE,CAJL;AAKE,MAAA,QAAQ,EAAEE,QALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AASD,GA3BG;;AA6BJd,EAAAA,MAAM,CACJ,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAE,GAAd;AAAmB,IAAA,MAAM,EAAE,GAA3B;AAAgC,IAAA,OAAO,EAAE;AAAEqB,MAAAA,eAAe,EAAE;AAAnB,KAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AAAW,IAAA,CAAC,EAAE,GAAd;AAAmB,IAAA,CAAC,EAAE,GAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADI,CAAN;AAMG,CApCH;;AAsCA,eAAeb,KAAf","sourcesContent":["const { render } = ReactDOM;\nconst { Stage, Sprite, Container, useTick } = ReactPixi;\nconst { useState } = React;\n\nconst Bunny = () => {\n    const Item = () => {\n  // states\n  const [x, setX] = useState(0);\n  const [y, setY] = useState(0);\n  const [rotation, setRotation] = useState(0);\n  \n  // increment\n  let i = 0;\n\n  // custom ticker\n  useTick(delta => {\n    i += 0.05 * delta;\n\n    setX(Math.sin(i) * 100);\n    setY(Math.sin(i/1.5) * 100);\n    setRotation(-10 + Math.sin(i/10 + Math.PI * 2) * 10);\n  });\n\n  return (\n    <Sprite\n      image=\"https://s3-us-west-2.amazonaws.com/s.cdpn.io/693612/IaUrttj.png\"\n      anchor={0.5}\n      x={x}\n      y={y}\n      rotation={rotation}\n    />\n  );\n};\n\nrender(\n  <Stage width={300} height={300} options={{ backgroundColor: 0x01262a }}>\n    <Container x={150} y={150}>\n      <Item />\n    </Container>\n  </Stage>\n);}\n\nexport default Bunny\n"]},"metadata":{},"sourceType":"module"}